// generated from rosidl_adapter/resource/msg.idl.em
// with input from dynamic_slam_interfaces/msg/ObjectOdometry.msg
// generated code does not contain a copyright notice

#include "geometry_msgs/msg/PoseWithCovariance.idl"
#include "nav_msgs/msg/Odometry.idl"

module dynamic_slam_interfaces {
  module msg {
    @verbatim (language="comment", text=
      "This represents the odometry (pose and velocity) of a single object with given id" "\n"
      "We use the header from odom.header which should be the timestamp " "\n"
      "of the estimated motion/pose")
    struct ObjectOdometry {
      @verbatim (language="comment", text=
        "object pose (L_w_k) and body-centric velocity.")
      nav_msgs::msg::Odometry odom;

      @verbatim (language="comment", text=
        "motion in world from k-1 to k")
      geometry_msgs::msg::PoseWithCovariance h_w_km1_k;

      @verbatim (language="comment", text=
        "unique object id (j)")
      int64 object_id;

      @verbatim (language="comment", text=
        "sequence ID: consecutively increasing ID (k)" "\n"
        "Sequence id's can be used to indicate when odometries are missing" "\n"
        "as they will be out of order (but should always be increasing)")
      uint32 sequence;
    };
  };
};
